// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Settings /> Should apply settings 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ConnectedRouter
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Settings)>
        <Settings
          actions={
            Object {
              "applySettings": [Function],
              "resetSettings": [Function],
              "setSettings": [Function],
              "switchSettings": [Function],
            }
          }
          activeGroup="graphics"
          data={
            Object {
              "graphics": Object {
                "antiAliasing": "off",
                "frameRateLimit": "60fps",
                "screenSize": "2560x1400",
                "vSync": "on",
              },
            }
          }
          hasUnsavedChanges={true}
        >
          <div>
            <SettingsMenu
              activeKey="graphics"
              handleApplySettings={[Function]}
              handleResetSettings={[Function]}
              handleReturnToMenu={[Function]}
              hasUnsavedChanges={true}
              navigationItems={
                Array [
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "graphics",
                    "name": "graphics",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "sound",
                    "name": "sound",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "controls",
                    "name": "controls",
                  },
                ]
              }
            >
              <Styled(styled.div)
                className="effect__appear"
              >
                <styled.div
                  className="effect__appear sc-bwzfXH cAueB"
                >
                  <div
                    className="effect__appear sc-bwzfXH cAueB sc-bdVaJa iVLFuM"
                  >
                    <styled.div>
                      <div
                        className="sc-bZQynM hKpJBw"
                      >
                        <Title
                          text="Settings"
                          theme={
                            Object {
                              "marginLeft": 2,
                            }
                          }
                        >
                          <styled.h1
                            className="font__accent"
                            theme={
                              Object {
                                "fontSize": 3,
                                "marginLeft": 2,
                              }
                            }
                          >
                            <h1
                              className="font__accent sc-ifAKCX egDVTP"
                            >
                              Settings
                            </h1>
                          </styled.h1>
                        </Title>
                        <Navigation
                          activeKey="graphics"
                          navigationItems={
                            Array [
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "graphics",
                                "name": "graphics",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "sound",
                                "name": "sound",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "controls",
                                "name": "controls",
                              },
                            ]
                          }
                        >
                          <styled.div
                            className="font__accent"
                          >
                            <div
                              className="font__accent sc-bxivhb fvOAWh"
                            >
                              <NavigationItem
                                active={true}
                                clickHandler={[Function]}
                                dataKey="graphics"
                                key="graphics"
                                name="graphics"
                              >
                                <styled.button
                                  data-key="graphics"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": true,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat drLPrj"
                                    data-key="graphics"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    graphics
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="sound"
                                key="sound"
                                name="sound"
                              >
                                <styled.button
                                  data-key="sound"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="sound"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    sound
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="controls"
                                key="controls"
                                name="controls"
                              >
                                <styled.button
                                  data-key="controls"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="controls"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    controls
                                  </button>
                                </styled.button>
                              </NavigationItem>
                            </div>
                          </styled.div>
                        </Navigation>
                        <styled.div>
                          <div
                            className="sc-gzVnrw jyBrwk"
                          >
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Apply"
                              name="Apply"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Apply"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Apply"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Apply"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Apply
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Reset"
                              name="Reset"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Reset"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Reset"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Reset"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Reset
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </Styled(styled.div)>
            </SettingsMenu>
          </div>
        </Settings>
      </Connect(Settings)>
    </Router>
  </ConnectedRouter>
</Provider>
`;

exports[`<Settings /> Should apply settings 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ConnectedRouter
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Settings)>
        <Settings
          actions={
            Object {
              "applySettings": [Function],
              "resetSettings": [Function],
              "setSettings": [Function],
              "switchSettings": [Function],
            }
          }
          activeGroup="graphics"
          data={
            Object {
              "graphics": Object {
                "antiAliasing": "off",
                "frameRateLimit": "60fps",
                "screenSize": "2560x1400",
                "vSync": "on",
              },
            }
          }
          hasUnsavedChanges={false}
        >
          <div>
            <SettingsMenu
              activeKey="graphics"
              handleApplySettings={[Function]}
              handleResetSettings={[Function]}
              handleReturnToMenu={[Function]}
              hasUnsavedChanges={false}
              navigationItems={
                Array [
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "graphics",
                    "name": "graphics",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "sound",
                    "name": "sound",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "controls",
                    "name": "controls",
                  },
                ]
              }
            >
              <Styled(styled.div)
                className="effect__appear"
              >
                <styled.div
                  className="effect__appear sc-bwzfXH cAueB"
                >
                  <div
                    className="effect__appear sc-bwzfXH cAueB sc-bdVaJa iVLFuM"
                  >
                    <styled.div>
                      <div
                        className="sc-bZQynM hKpJBw"
                      >
                        <Title
                          text="Settings"
                          theme={
                            Object {
                              "marginLeft": 2,
                            }
                          }
                        >
                          <styled.h1
                            className="font__accent"
                            theme={
                              Object {
                                "fontSize": 3,
                                "marginLeft": 2,
                              }
                            }
                          >
                            <h1
                              className="font__accent sc-ifAKCX egDVTP"
                            >
                              Settings
                            </h1>
                          </styled.h1>
                        </Title>
                        <Navigation
                          activeKey="graphics"
                          navigationItems={
                            Array [
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "graphics",
                                "name": "graphics",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "sound",
                                "name": "sound",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "controls",
                                "name": "controls",
                              },
                            ]
                          }
                        >
                          <styled.div
                            className="font__accent"
                          >
                            <div
                              className="font__accent sc-bxivhb fvOAWh"
                            >
                              <NavigationItem
                                active={true}
                                clickHandler={[Function]}
                                dataKey="graphics"
                                key="graphics"
                                name="graphics"
                              >
                                <styled.button
                                  data-key="graphics"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": true,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat drLPrj"
                                    data-key="graphics"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    graphics
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="sound"
                                key="sound"
                                name="sound"
                              >
                                <styled.button
                                  data-key="sound"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="sound"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    sound
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="controls"
                                key="controls"
                                name="controls"
                              >
                                <styled.button
                                  data-key="controls"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="controls"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    controls
                                  </button>
                                </styled.button>
                              </NavigationItem>
                            </div>
                          </styled.div>
                        </Navigation>
                        <styled.div>
                          <div
                            className="sc-gzVnrw jyBrwk"
                          >
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Back"
                              name="Back"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Back"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Back"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Back"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Back
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </Styled(styled.div)>
            </SettingsMenu>
          </div>
        </Settings>
      </Connect(Settings)>
    </Router>
  </ConnectedRouter>
</Provider>
`;

exports[`<Settings /> Should renders 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ConnectedRouter
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Settings)>
        <Settings
          actions={
            Object {
              "applySettings": [Function],
              "resetSettings": [Function],
              "setSettings": [Function],
              "switchSettings": [Function],
            }
          }
          activeGroup="graphics"
          data={
            Object {
              "graphics": Object {
                "antiAliasing": "off",
                "frameRateLimit": "60fps",
                "screenSize": "1920x1080",
                "vSync": "on",
              },
            }
          }
          hasUnsavedChanges={false}
        >
          <div>
            <SettingsMenu
              activeKey="graphics"
              handleApplySettings={[Function]}
              handleResetSettings={[Function]}
              handleReturnToMenu={[Function]}
              hasUnsavedChanges={false}
              navigationItems={
                Array [
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "graphics",
                    "name": "graphics",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "sound",
                    "name": "sound",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "controls",
                    "name": "controls",
                  },
                ]
              }
            >
              <Styled(styled.div)
                className="effect__appear"
              >
                <styled.div
                  className="effect__appear sc-bwzfXH cAueB"
                >
                  <div
                    className="effect__appear sc-bwzfXH cAueB sc-bdVaJa iVLFuM"
                  >
                    <styled.div>
                      <div
                        className="sc-bZQynM hKpJBw"
                      >
                        <Title
                          text="Settings"
                          theme={
                            Object {
                              "marginLeft": 2,
                            }
                          }
                        >
                          <styled.h1
                            className="font__accent"
                            theme={
                              Object {
                                "fontSize": 3,
                                "marginLeft": 2,
                              }
                            }
                          >
                            <h1
                              className="font__accent sc-ifAKCX egDVTP"
                            >
                              Settings
                            </h1>
                          </styled.h1>
                        </Title>
                        <Navigation
                          activeKey="graphics"
                          navigationItems={
                            Array [
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "graphics",
                                "name": "graphics",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "sound",
                                "name": "sound",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "controls",
                                "name": "controls",
                              },
                            ]
                          }
                        >
                          <styled.div
                            className="font__accent"
                          >
                            <div
                              className="font__accent sc-bxivhb fvOAWh"
                            >
                              <NavigationItem
                                active={true}
                                clickHandler={[Function]}
                                dataKey="graphics"
                                key="graphics"
                                name="graphics"
                              >
                                <styled.button
                                  data-key="graphics"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": true,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat drLPrj"
                                    data-key="graphics"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    graphics
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="sound"
                                key="sound"
                                name="sound"
                              >
                                <styled.button
                                  data-key="sound"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="sound"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    sound
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="controls"
                                key="controls"
                                name="controls"
                              >
                                <styled.button
                                  data-key="controls"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="controls"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    controls
                                  </button>
                                </styled.button>
                              </NavigationItem>
                            </div>
                          </styled.div>
                        </Navigation>
                        <styled.div>
                          <div
                            className="sc-gzVnrw jyBrwk"
                          >
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Back"
                              name="Back"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Back"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Back"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Back"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Back
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </Styled(styled.div)>
            </SettingsMenu>
          </div>
        </Settings>
      </Connect(Settings)>
    </Router>
  </ConnectedRouter>
</Provider>
`;

exports[`<Settings /> Should reset settings 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ConnectedRouter
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Settings)>
        <Settings
          actions={
            Object {
              "applySettings": [Function],
              "resetSettings": [Function],
              "setSettings": [Function],
              "switchSettings": [Function],
            }
          }
          activeGroup="graphics"
          data={
            Object {
              "graphics": Object {
                "antiAliasing": "off",
                "frameRateLimit": "60fps",
                "screenSize": "2560x1400",
                "vSync": "on",
              },
            }
          }
          hasUnsavedChanges={true}
        >
          <div>
            <SettingsMenu
              activeKey="graphics"
              handleApplySettings={[Function]}
              handleResetSettings={[Function]}
              handleReturnToMenu={[Function]}
              hasUnsavedChanges={true}
              navigationItems={
                Array [
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "graphics",
                    "name": "graphics",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "sound",
                    "name": "sound",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "controls",
                    "name": "controls",
                  },
                ]
              }
            >
              <Styled(styled.div)
                className="effect__appear"
              >
                <styled.div
                  className="effect__appear sc-bwzfXH cAueB"
                >
                  <div
                    className="effect__appear sc-bwzfXH cAueB sc-bdVaJa iVLFuM"
                  >
                    <styled.div>
                      <div
                        className="sc-bZQynM hKpJBw"
                      >
                        <Title
                          text="Settings"
                          theme={
                            Object {
                              "marginLeft": 2,
                            }
                          }
                        >
                          <styled.h1
                            className="font__accent"
                            theme={
                              Object {
                                "fontSize": 3,
                                "marginLeft": 2,
                              }
                            }
                          >
                            <h1
                              className="font__accent sc-ifAKCX egDVTP"
                            >
                              Settings
                            </h1>
                          </styled.h1>
                        </Title>
                        <Navigation
                          activeKey="graphics"
                          navigationItems={
                            Array [
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "graphics",
                                "name": "graphics",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "sound",
                                "name": "sound",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "controls",
                                "name": "controls",
                              },
                            ]
                          }
                        >
                          <styled.div
                            className="font__accent"
                          >
                            <div
                              className="font__accent sc-bxivhb fvOAWh"
                            >
                              <NavigationItem
                                active={true}
                                clickHandler={[Function]}
                                dataKey="graphics"
                                key="graphics"
                                name="graphics"
                              >
                                <styled.button
                                  data-key="graphics"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": true,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat drLPrj"
                                    data-key="graphics"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    graphics
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="sound"
                                key="sound"
                                name="sound"
                              >
                                <styled.button
                                  data-key="sound"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="sound"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    sound
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="controls"
                                key="controls"
                                name="controls"
                              >
                                <styled.button
                                  data-key="controls"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="controls"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    controls
                                  </button>
                                </styled.button>
                              </NavigationItem>
                            </div>
                          </styled.div>
                        </Navigation>
                        <styled.div>
                          <div
                            className="sc-gzVnrw jyBrwk"
                          >
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Apply"
                              name="Apply"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Apply"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Apply"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Apply"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Apply
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Reset"
                              name="Reset"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Reset"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Reset"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Reset"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Reset
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </Styled(styled.div)>
            </SettingsMenu>
          </div>
        </Settings>
      </Connect(Settings)>
    </Router>
  </ConnectedRouter>
</Provider>
`;

exports[`<Settings /> Should reset settings 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ConnectedRouter
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Settings)>
        <Settings
          actions={
            Object {
              "applySettings": [Function],
              "resetSettings": [Function],
              "setSettings": [Function],
              "switchSettings": [Function],
            }
          }
          activeGroup="graphics"
          data={
            Object {
              "graphics": Object {
                "antiAliasing": "off",
                "frameRateLimit": "60fps",
                "screenSize": "1920x1080",
                "vSync": "on",
              },
            }
          }
          hasUnsavedChanges={false}
        >
          <div>
            <SettingsMenu
              activeKey="graphics"
              handleApplySettings={[Function]}
              handleResetSettings={[Function]}
              handleReturnToMenu={[Function]}
              hasUnsavedChanges={false}
              navigationItems={
                Array [
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "graphics",
                    "name": "graphics",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "sound",
                    "name": "sound",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "controls",
                    "name": "controls",
                  },
                ]
              }
            >
              <Styled(styled.div)
                className="effect__appear"
              >
                <styled.div
                  className="effect__appear sc-bwzfXH cAueB"
                >
                  <div
                    className="effect__appear sc-bwzfXH cAueB sc-bdVaJa iVLFuM"
                  >
                    <styled.div>
                      <div
                        className="sc-bZQynM hKpJBw"
                      >
                        <Title
                          text="Settings"
                          theme={
                            Object {
                              "marginLeft": 2,
                            }
                          }
                        >
                          <styled.h1
                            className="font__accent"
                            theme={
                              Object {
                                "fontSize": 3,
                                "marginLeft": 2,
                              }
                            }
                          >
                            <h1
                              className="font__accent sc-ifAKCX egDVTP"
                            >
                              Settings
                            </h1>
                          </styled.h1>
                        </Title>
                        <Navigation
                          activeKey="graphics"
                          navigationItems={
                            Array [
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "graphics",
                                "name": "graphics",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "sound",
                                "name": "sound",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "controls",
                                "name": "controls",
                              },
                            ]
                          }
                        >
                          <styled.div
                            className="font__accent"
                          >
                            <div
                              className="font__accent sc-bxivhb fvOAWh"
                            >
                              <NavigationItem
                                active={true}
                                clickHandler={[Function]}
                                dataKey="graphics"
                                key="graphics"
                                name="graphics"
                              >
                                <styled.button
                                  data-key="graphics"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": true,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat drLPrj"
                                    data-key="graphics"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    graphics
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="sound"
                                key="sound"
                                name="sound"
                              >
                                <styled.button
                                  data-key="sound"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="sound"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    sound
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="controls"
                                key="controls"
                                name="controls"
                              >
                                <styled.button
                                  data-key="controls"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="controls"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    controls
                                  </button>
                                </styled.button>
                              </NavigationItem>
                            </div>
                          </styled.div>
                        </Navigation>
                        <styled.div>
                          <div
                            className="sc-gzVnrw jyBrwk"
                          >
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Back"
                              name="Back"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Back"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Back"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Back"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Back
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </Styled(styled.div)>
            </SettingsMenu>
          </div>
        </Settings>
      </Connect(Settings)>
    </Router>
  </ConnectedRouter>
</Provider>
`;

exports[`<Settings /> Should switch group 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ConnectedRouter
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Settings)>
        <Settings
          actions={
            Object {
              "applySettings": [Function],
              "resetSettings": [Function],
              "setSettings": [Function],
              "switchSettings": [Function],
            }
          }
          activeGroup="sound"
          data={
            Object {
              "graphics": Object {
                "antiAliasing": "off",
                "frameRateLimit": "60fps",
                "screenSize": "1920x1080",
                "vSync": "on",
              },
            }
          }
          hasUnsavedChanges={false}
        >
          <div>
            <SettingsMenu
              activeKey="sound"
              handleApplySettings={[Function]}
              handleResetSettings={[Function]}
              handleReturnToMenu={[Function]}
              hasUnsavedChanges={false}
              navigationItems={
                Array [
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "graphics",
                    "name": "graphics",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "sound",
                    "name": "sound",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "controls",
                    "name": "controls",
                  },
                ]
              }
            >
              <Styled(styled.div)
                className="effect__appear"
              >
                <styled.div
                  className="effect__appear sc-bwzfXH cAueB"
                >
                  <div
                    className="effect__appear sc-bwzfXH cAueB sc-bdVaJa iVLFuM"
                  >
                    <styled.div>
                      <div
                        className="sc-bZQynM hKpJBw"
                      >
                        <Title
                          text="Settings"
                          theme={
                            Object {
                              "marginLeft": 2,
                            }
                          }
                        >
                          <styled.h1
                            className="font__accent"
                            theme={
                              Object {
                                "fontSize": 3,
                                "marginLeft": 2,
                              }
                            }
                          >
                            <h1
                              className="font__accent sc-ifAKCX egDVTP"
                            >
                              Settings
                            </h1>
                          </styled.h1>
                        </Title>
                        <Navigation
                          activeKey="sound"
                          navigationItems={
                            Array [
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "graphics",
                                "name": "graphics",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "sound",
                                "name": "sound",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "controls",
                                "name": "controls",
                              },
                            ]
                          }
                        >
                          <styled.div
                            className="font__accent"
                          >
                            <div
                              className="font__accent sc-bxivhb fvOAWh"
                            >
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="graphics"
                                key="graphics"
                                name="graphics"
                              >
                                <styled.button
                                  data-key="graphics"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="graphics"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    graphics
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={true}
                                clickHandler={[Function]}
                                dataKey="sound"
                                key="sound"
                                name="sound"
                              >
                                <styled.button
                                  data-key="sound"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": true,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat drLPrj"
                                    data-key="sound"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    sound
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="controls"
                                key="controls"
                                name="controls"
                              >
                                <styled.button
                                  data-key="controls"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="controls"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    controls
                                  </button>
                                </styled.button>
                              </NavigationItem>
                            </div>
                          </styled.div>
                        </Navigation>
                        <styled.div>
                          <div
                            className="sc-gzVnrw jyBrwk"
                          >
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Back"
                              name="Back"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Back"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Back"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Back"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Back
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </Styled(styled.div)>
            </SettingsMenu>
          </div>
        </Settings>
      </Connect(Settings)>
    </Router>
  </ConnectedRouter>
</Provider>
`;

exports[`<Settings /> Should update settings and switch to "changed" state 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ConnectedRouter
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Settings)>
        <Settings
          actions={
            Object {
              "applySettings": [Function],
              "resetSettings": [Function],
              "setSettings": [Function],
              "switchSettings": [Function],
            }
          }
          activeGroup="graphics"
          data={
            Object {
              "graphics": Object {
                "antiAliasing": "off",
                "frameRateLimit": "60fps",
                "screenSize": "2560x1400",
                "vSync": "on",
              },
            }
          }
          hasUnsavedChanges={true}
        >
          <div>
            <SettingsMenu
              activeKey="graphics"
              handleApplySettings={[Function]}
              handleResetSettings={[Function]}
              handleReturnToMenu={[Function]}
              hasUnsavedChanges={true}
              navigationItems={
                Array [
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "graphics",
                    "name": "graphics",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "sound",
                    "name": "sound",
                  },
                  Object {
                    "clickHandler": [Function],
                    "dataKey": "controls",
                    "name": "controls",
                  },
                ]
              }
            >
              <Styled(styled.div)
                className="effect__appear"
              >
                <styled.div
                  className="effect__appear sc-bwzfXH cAueB"
                >
                  <div
                    className="effect__appear sc-bwzfXH cAueB sc-bdVaJa iVLFuM"
                  >
                    <styled.div>
                      <div
                        className="sc-bZQynM hKpJBw"
                      >
                        <Title
                          text="Settings"
                          theme={
                            Object {
                              "marginLeft": 2,
                            }
                          }
                        >
                          <styled.h1
                            className="font__accent"
                            theme={
                              Object {
                                "fontSize": 3,
                                "marginLeft": 2,
                              }
                            }
                          >
                            <h1
                              className="font__accent sc-ifAKCX egDVTP"
                            >
                              Settings
                            </h1>
                          </styled.h1>
                        </Title>
                        <Navigation
                          activeKey="graphics"
                          navigationItems={
                            Array [
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "graphics",
                                "name": "graphics",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "sound",
                                "name": "sound",
                              },
                              Object {
                                "clickHandler": [Function],
                                "dataKey": "controls",
                                "name": "controls",
                              },
                            ]
                          }
                        >
                          <styled.div
                            className="font__accent"
                          >
                            <div
                              className="font__accent sc-bxivhb fvOAWh"
                            >
                              <NavigationItem
                                active={true}
                                clickHandler={[Function]}
                                dataKey="graphics"
                                key="graphics"
                                name="graphics"
                              >
                                <styled.button
                                  data-key="graphics"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": true,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat drLPrj"
                                    data-key="graphics"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    graphics
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="sound"
                                key="sound"
                                name="sound"
                              >
                                <styled.button
                                  data-key="sound"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="sound"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    sound
                                  </button>
                                </styled.button>
                              </NavigationItem>
                              <NavigationItem
                                active={false}
                                clickHandler={[Function]}
                                dataKey="controls"
                                key="controls"
                                name="controls"
                              >
                                <styled.button
                                  data-key="controls"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  theme={
                                    Object {
                                      "isActive": false,
                                    }
                                  }
                                >
                                  <button
                                    className="sc-htpNat cQahHD"
                                    data-key="controls"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    controls
                                  </button>
                                </styled.button>
                              </NavigationItem>
                            </div>
                          </styled.div>
                        </Navigation>
                        <styled.div>
                          <div
                            className="sc-gzVnrw jyBrwk"
                          >
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Apply"
                              name="Apply"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Apply"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Apply"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Apply"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Apply
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                            <SettingsMenuItem
                              clickHandler={[Function]}
                              key="Reset"
                              name="Reset"
                              to="/menu"
                            >
                              <Button
                                clickHandler={[Function]}
                                name="Reset"
                                theme={
                                  Object {
                                    "width": 10,
                                  }
                                }
                                to="/menu"
                              >
                                <styled.button
                                  className="effect__glitch"
                                  data-text="Reset"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  theme={
                                    Object {
                                      "direction": "row",
                                      "textAlign": "center",
                                      "width": 10,
                                    }
                                  }
                                >
                                  <button
                                    className="effect__glitch sc-EHOje gEPqud"
                                    data-text="Reset"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                  >
                                    Reset
                                    <Link
                                      replace={false}
                                      tabIndex={0}
                                      to="/menu"
                                    >
                                      <a
                                        href="/menu"
                                        onClick={[Function]}
                                        tabIndex={0}
                                      />
                                    </Link>
                                  </button>
                                </styled.button>
                              </Button>
                            </SettingsMenuItem>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </div>
                </styled.div>
              </Styled(styled.div)>
            </SettingsMenu>
          </div>
        </Settings>
      </Connect(Settings)>
    </Router>
  </ConnectedRouter>
</Provider>
`;
